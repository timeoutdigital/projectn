<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SLLOccurrence', 'searchlight_london');

/**
 * BaseSLLOccurrence
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property integer $venue_id
 * @property date $date_start
 * @property time $time_start
 * @property date $date_end
 * @property time $time_end
 * @property integer $annotation_behaviour
 * @property integer $new
 * @property integer $last_chance
 * @property integer $recommended
 * @property string $source
 * @property integer $source_id
 * @property integer $search_grouping_id
 * @property string $seo_synopsis
 * @property string $title
 * @property string $annotation
 * @property string $price
 * @property string $notable_title
 * @property integer $image_id
 * @property int $page_views
 * @property string $flickr_tag
 * @property string $advanced_text
 * @property date $date_created
 * @property date $date_modified
 * @property SLLEvent $SLLEvent
 * @property SLLVenue $SLLVenue
 * 
 * @method integer       getId()                   Returns the current record's "id" value
 * @method integer       getEventId()              Returns the current record's "event_id" value
 * @method integer       getVenueId()              Returns the current record's "venue_id" value
 * @method date          getDateStart()            Returns the current record's "date_start" value
 * @method time          getTimeStart()            Returns the current record's "time_start" value
 * @method date          getDateEnd()              Returns the current record's "date_end" value
 * @method time          getTimeEnd()              Returns the current record's "time_end" value
 * @method integer       getAnnotationBehaviour()  Returns the current record's "annotation_behaviour" value
 * @method integer       getNew()                  Returns the current record's "new" value
 * @method integer       getLastChance()           Returns the current record's "last_chance" value
 * @method integer       getRecommended()          Returns the current record's "recommended" value
 * @method string        getSource()               Returns the current record's "source" value
 * @method integer       getSourceId()             Returns the current record's "source_id" value
 * @method integer       getSearchGroupingId()     Returns the current record's "search_grouping_id" value
 * @method string        getSeoSynopsis()          Returns the current record's "seo_synopsis" value
 * @method string        getTitle()                Returns the current record's "title" value
 * @method string        getAnnotation()           Returns the current record's "annotation" value
 * @method string        getPrice()                Returns the current record's "price" value
 * @method string        getNotableTitle()         Returns the current record's "notable_title" value
 * @method integer       getImageId()              Returns the current record's "image_id" value
 * @method int           getPageViews()            Returns the current record's "page_views" value
 * @method string        getFlickrTag()            Returns the current record's "flickr_tag" value
 * @method string        getAdvancedText()         Returns the current record's "advanced_text" value
 * @method date          getDateCreated()          Returns the current record's "date_created" value
 * @method date          getDateModified()         Returns the current record's "date_modified" value
 * @method SLLEvent      getSLLEvent()             Returns the current record's "SLLEvent" value
 * @method SLLVenue      getSLLVenue()             Returns the current record's "SLLVenue" value
 * @method SLLOccurrence setId()                   Sets the current record's "id" value
 * @method SLLOccurrence setEventId()              Sets the current record's "event_id" value
 * @method SLLOccurrence setVenueId()              Sets the current record's "venue_id" value
 * @method SLLOccurrence setDateStart()            Sets the current record's "date_start" value
 * @method SLLOccurrence setTimeStart()            Sets the current record's "time_start" value
 * @method SLLOccurrence setDateEnd()              Sets the current record's "date_end" value
 * @method SLLOccurrence setTimeEnd()              Sets the current record's "time_end" value
 * @method SLLOccurrence setAnnotationBehaviour()  Sets the current record's "annotation_behaviour" value
 * @method SLLOccurrence setNew()                  Sets the current record's "new" value
 * @method SLLOccurrence setLastChance()           Sets the current record's "last_chance" value
 * @method SLLOccurrence setRecommended()          Sets the current record's "recommended" value
 * @method SLLOccurrence setSource()               Sets the current record's "source" value
 * @method SLLOccurrence setSourceId()             Sets the current record's "source_id" value
 * @method SLLOccurrence setSearchGroupingId()     Sets the current record's "search_grouping_id" value
 * @method SLLOccurrence setSeoSynopsis()          Sets the current record's "seo_synopsis" value
 * @method SLLOccurrence setTitle()                Sets the current record's "title" value
 * @method SLLOccurrence setAnnotation()           Sets the current record's "annotation" value
 * @method SLLOccurrence setPrice()                Sets the current record's "price" value
 * @method SLLOccurrence setNotableTitle()         Sets the current record's "notable_title" value
 * @method SLLOccurrence setImageId()              Sets the current record's "image_id" value
 * @method SLLOccurrence setPageViews()            Sets the current record's "page_views" value
 * @method SLLOccurrence setFlickrTag()            Sets the current record's "flickr_tag" value
 * @method SLLOccurrence setAdvancedText()         Sets the current record's "advanced_text" value
 * @method SLLOccurrence setDateCreated()          Sets the current record's "date_created" value
 * @method SLLOccurrence setDateModified()         Sets the current record's "date_modified" value
 * @method SLLOccurrence setSLLEvent()             Sets the current record's "SLLEvent" value
 * @method SLLOccurrence setSLLVenue()             Sets the current record's "SLLVenue" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseSLLOccurrence extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('occurrence');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('event_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('venue_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('date_start', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('time_start', 'time', 25, array(
             'type' => 'time',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('date_end', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('time_end', 'time', 25, array(
             'type' => 'time',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('annotation_behaviour', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => '1',
             ));
        $this->hasColumn('new', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '1',
             ));
        $this->hasColumn('last_chance', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '1',
             ));
        $this->hasColumn('recommended', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'notnull' => true,
             'length' => '1',
             ));
        $this->hasColumn('source', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '15',
             ));
        $this->hasColumn('source_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('search_grouping_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('seo_synopsis', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('title', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             ));
        $this->hasColumn('annotation', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             ));
        $this->hasColumn('price', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             ));
        $this->hasColumn('notable_title', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));
        $this->hasColumn('image_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('page_views', 'int', 11, array(
             'type' => 'int',
             'length' => '11',
             ));
        $this->hasColumn('flickr_tag', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('advanced_text', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             ));
        $this->hasColumn('date_created', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('date_modified', 'date', null, array(
             'type' => 'date',
             ));

        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SLLEvent', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasOne('SLLVenue', array(
             'local' => 'venue_id',
             'foreign' => 'id'));
    }
}