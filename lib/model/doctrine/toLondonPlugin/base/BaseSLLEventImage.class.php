<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SLLEventImage', 'searchlight_london');

/**
 * BaseSLLEventImage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $item_id
 * @property string $item_type
 * @property integer $image_id
 * @property integer $sort_index
 * 
 * @method integer       getItemId()     Returns the current record's "item_id" value
 * @method string        getItemType()   Returns the current record's "item_type" value
 * @method integer       getImageId()    Returns the current record's "image_id" value
 * @method integer       getSortIndex()  Returns the current record's "sort_index" value
 * @method SLLEventImage setItemId()     Sets the current record's "item_id" value
 * @method SLLEventImage setItemType()   Sets the current record's "item_type" value
 * @method SLLEventImage setImageId()    Sets the current record's "image_id" value
 * @method SLLEventImage setSortIndex()  Sets the current record's "sort_index" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseSLLEventImage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_image');
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'autoincrement' => true,
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('item_type', 'string', 255, array(
             'type' => 'string',
             'primary' => true,
             'length' => '255',
             ));
        $this->hasColumn('image_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('sort_index', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'primary' => true,
             'length' => '4',
             ));

        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}