<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ImportLoggerSuccess', 'project_n');

/**
 * BaseImportLoggerSuccess
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property enum $type
 * @property string $log
 * @property integer $import_logger_id
 * @property ImportLogger $ImportLogger
 * @property Doctrine_Collection $Poi
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $Movie
 * 
 * @method enum                getType()             Returns the current record's "type" value
 * @method string              getLog()              Returns the current record's "log" value
 * @method integer             getImportLoggerId()   Returns the current record's "import_logger_id" value
 * @method ImportLogger        getImportLogger()     Returns the current record's "ImportLogger" value
 * @method Doctrine_Collection getPoi()              Returns the current record's "Poi" collection
 * @method Doctrine_Collection getEvent()            Returns the current record's "Event" collection
 * @method Doctrine_Collection getMovie()            Returns the current record's "Movie" collection
 * @method ImportLoggerSuccess setType()             Sets the current record's "type" value
 * @method ImportLoggerSuccess setLog()              Sets the current record's "log" value
 * @method ImportLoggerSuccess setImportLoggerId()   Sets the current record's "import_logger_id" value
 * @method ImportLoggerSuccess setImportLogger()     Sets the current record's "ImportLogger" value
 * @method ImportLoggerSuccess setPoi()              Sets the current record's "Poi" collection
 * @method ImportLoggerSuccess setEvent()            Sets the current record's "Event" collection
 * @method ImportLoggerSuccess setMovie()            Sets the current record's "Movie" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseImportLoggerSuccess extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('import_logger_success');
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'insert',
              1 => 'update',
              2 => 'delete',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('log', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('import_logger_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ImportLogger', array(
             'local' => 'import_logger_id',
             'foreign' => 'id'));

        $this->hasMany('Poi', array(
             'refClass' => 'LinkingImportLoggerSuccessPoi',
             'local' => 'import_logger_success_id',
             'foreign' => 'poi_id'));

        $this->hasMany('Event', array(
             'refClass' => 'LinkingImportLoggerSuccessEvent',
             'local' => 'import_logger_success_id',
             'foreign' => 'event_id'));

        $this->hasMany('Movie', array(
             'refClass' => 'LinkingImportLoggerSuccessMovie',
             'local' => 'import_logger_success_id',
             'foreign' => 'movie_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}