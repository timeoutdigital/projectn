<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Media', 'project_n');

/**
 * BaseMedia
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $ident
 * @property string $url
 * @property string $mime_type
 * @property string $file_last_modified
 * @property string $etag
 * @property integer $content_length
 * 
 * @method string  getIdent()              Returns the current record's "ident" value
 * @method string  getUrl()                Returns the current record's "url" value
 * @method string  getMimeType()           Returns the current record's "mime_type" value
 * @method string  getFileLastModified()   Returns the current record's "file_last_modified" value
 * @method string  getEtag()               Returns the current record's "etag" value
 * @method integer getContentLength()      Returns the current record's "content_length" value
 * @method Media   setIdent()              Sets the current record's "ident" value
 * @method Media   setUrl()                Sets the current record's "url" value
 * @method Media   setMimeType()           Sets the current record's "mime_type" value
 * @method Media   setFileLastModified()   Sets the current record's "file_last_modified" value
 * @method Media   setEtag()               Sets the current record's "etag" value
 * @method Media   setContentLength()      Sets the current record's "content_length" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseMedia extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('media');
        $this->hasColumn('ident', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '32',
             ));
        $this->hasColumn('url', 'string', 1024, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '1024',
             ));
        $this->hasColumn('mime_type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('file_last_modified', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('etag', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('content_length', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));


        $this->index('ident_index', array(
             'fields' => 
             array(
              0 => 'ident',
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}