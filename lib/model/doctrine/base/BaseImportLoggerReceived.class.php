<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ImportLoggerReceived', 'project_n');

/**
 * BaseImportLoggerReceived
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $total_received
 * @property string $model
 * @property integer $import_logger_id
 * @property ImportLogger $ImportLogger
 * 
 * @method integer              getTotalReceived()    Returns the current record's "total_received" value
 * @method string               getModel()            Returns the current record's "model" value
 * @method integer              getImportLoggerId()   Returns the current record's "import_logger_id" value
 * @method ImportLogger         getImportLogger()     Returns the current record's "ImportLogger" value
 * @method ImportLoggerReceived setTotalReceived()    Sets the current record's "total_received" value
 * @method ImportLoggerReceived setModel()            Sets the current record's "model" value
 * @method ImportLoggerReceived setImportLoggerId()   Sets the current record's "import_logger_id" value
 * @method ImportLoggerReceived setImportLogger()     Sets the current record's "ImportLogger" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseImportLoggerReceived extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('import_logger_received');
        $this->hasColumn('total_received', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('model', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '50',
             ));
        $this->hasColumn('import_logger_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('model_index', array(
             'fields' => 
             array(
              0 => 'model',
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ImportLogger', array(
             'local' => 'import_logger_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}