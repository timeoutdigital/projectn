<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ImportRecordLogger', 'project_n');

/**
 * BaseImportRecordLogger
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property enum $operation
 * @property string $log
 * @property integer $import_logger_id
 * @property ImportLogger $ImportLogger
 * 
 * @method enum               getOperation()        Returns the current record's "operation" value
 * @method string             getLog()              Returns the current record's "log" value
 * @method integer            getImportLoggerId()   Returns the current record's "import_logger_id" value
 * @method ImportLogger       getImportLogger()     Returns the current record's "ImportLogger" value
 * @method ImportRecordLogger setOperation()        Sets the current record's "operation" value
 * @method ImportRecordLogger setLog()              Sets the current record's "log" value
 * @method ImportRecordLogger setImportLoggerId()   Sets the current record's "import_logger_id" value
 * @method ImportRecordLogger setImportLogger()     Sets the current record's "ImportLogger" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseImportRecordLogger extends RecordLogger
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('import_record_logger');
        $this->hasColumn('operation', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'insert',
              1 => 'update',
              2 => 'existing',
              3 => 'delete',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('log', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('import_logger_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('operation_index', array(
             'fields' => 
             array(
              0 => 'operation',
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ImportLogger', array(
             'local' => 'import_logger_id',
             'foreign' => 'id'));
    }
}