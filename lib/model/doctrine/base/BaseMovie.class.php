<?php

/**
 * BaseMovie
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $vender_id
 * @property string $name
 * @property string $genre
 * @property string $plot
 * @property string $review
 * @property string $url
 * @property float $rating
 * @property string $age_rating
 * @property Doctrine_Collection $MovieOccurence
 * @property Doctrine_Collection $MovieMedia
 * @property Doctrine_Collection $MovieProperty
 * 
 * @method integer             getVenderId()       Returns the current record's "vender_id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method string              getGenre()          Returns the current record's "genre" value
 * @method string              getPlot()           Returns the current record's "plot" value
 * @method string              getReview()         Returns the current record's "review" value
 * @method string              getUrl()            Returns the current record's "url" value
 * @method float               getRating()         Returns the current record's "rating" value
 * @method string              getAgeRating()      Returns the current record's "age_rating" value
 * @method Doctrine_Collection getMovieOccurence() Returns the current record's "MovieOccurence" collection
 * @method Doctrine_Collection getMovieMedia()     Returns the current record's "MovieMedia" collection
 * @method Doctrine_Collection getMovieProperty()  Returns the current record's "MovieProperty" collection
 * @method Movie               setVenderId()       Sets the current record's "vender_id" value
 * @method Movie               setName()           Sets the current record's "name" value
 * @method Movie               setGenre()          Sets the current record's "genre" value
 * @method Movie               setPlot()           Sets the current record's "plot" value
 * @method Movie               setReview()         Sets the current record's "review" value
 * @method Movie               setUrl()            Sets the current record's "url" value
 * @method Movie               setRating()         Sets the current record's "rating" value
 * @method Movie               setAgeRating()      Sets the current record's "age_rating" value
 * @method Movie               setMovieOccurence() Sets the current record's "MovieOccurence" collection
 * @method Movie               setMovieMedia()     Sets the current record's "MovieMedia" collection
 * @method Movie               setMovieProperty()  Sets the current record's "MovieProperty" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseMovie extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('movie');
        $this->hasColumn('vender_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 256, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '256',
             ));
        $this->hasColumn('genre', 'string', 256, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '256',
             ));
        $this->hasColumn('plot', 'string', 65535, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '65535',
             ));
        $this->hasColumn('review', 'string', 65535, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '65535',
             ));
        $this->hasColumn('url', 'string', 1024, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '1024',
             ));
        $this->hasColumn('rating', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             ));
        $this->hasColumn('age_rating', 'string', 32, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '32',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MovieOccurence', array(
             'local' => 'id',
             'foreign' => 'movie_id'));

        $this->hasMany('MovieMedia', array(
             'local' => 'id',
             'foreign' => 'movie_id'));

        $this->hasMany('MovieProperty', array(
             'local' => 'id',
             'foreign' => 'movie_id'));
    }
}