<?php

/**
 * BaseEventCategoryMapping
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $map_from
 * @property string $map_to
 * @property integer $vendor_id
 * @property Vendor $Vendor
 * 
 * @method string               getMapFrom()   Returns the current record's "map_from" value
 * @method string               getMapTo()     Returns the current record's "map_to" value
 * @method integer              getVendorId()  Returns the current record's "vendor_id" value
 * @method Vendor               getVendor()    Returns the current record's "Vendor" value
 * @method EventCategoryMapping setMapFrom()   Sets the current record's "map_from" value
 * @method EventCategoryMapping setMapTo()     Sets the current record's "map_to" value
 * @method EventCategoryMapping setVendorId()  Sets the current record's "vendor_id" value
 * @method EventCategoryMapping setVendor()    Sets the current record's "Vendor" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseEventCategoryMapping extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_category_mapping');
        $this->hasColumn('map_from', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '50',
             ));
        $this->hasColumn('map_to', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '50',
             ));
        $this->hasColumn('vendor_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Vendor', array(
             'local' => 'vendor_id',
             'foreign' => 'id'));
    }
}