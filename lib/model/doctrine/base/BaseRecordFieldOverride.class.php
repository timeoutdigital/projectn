<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RecordFieldOverride', 'project_n');

/**
 * BaseRecordFieldOverride
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $field
 * @property string $received_value
 * @property string $edited_value
 * @property Doctrine_Collection $Poi
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $Movie
 * 
 * @method string              getField()          Returns the current record's "field" value
 * @method string              getReceivedValue()  Returns the current record's "received_value" value
 * @method string              getEditedValue()    Returns the current record's "edited_value" value
 * @method Doctrine_Collection getPoi()            Returns the current record's "Poi" collection
 * @method Doctrine_Collection getEvent()          Returns the current record's "Event" collection
 * @method Doctrine_Collection getMovie()          Returns the current record's "Movie" collection
 * @method RecordFieldOverride setField()          Sets the current record's "field" value
 * @method RecordFieldOverride setReceivedValue()  Sets the current record's "received_value" value
 * @method RecordFieldOverride setEditedValue()    Sets the current record's "edited_value" value
 * @method RecordFieldOverride setPoi()            Sets the current record's "Poi" collection
 * @method RecordFieldOverride setEvent()          Sets the current record's "Event" collection
 * @method RecordFieldOverride setMovie()          Sets the current record's "Movie" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRecordFieldOverride extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('record_field_override');
        $this->hasColumn('field', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('received_value', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('edited_value', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Poi', array(
             'refClass' => 'OverridePoi',
             'local' => 'override_id',
             'foreign' => 'poi_id'));

        $this->hasMany('Event', array(
             'refClass' => 'OverrideEvent',
             'local' => 'override_id',
             'foreign' => 'event_id'));

        $this->hasMany('Movie', array(
             'refClass' => 'OverrideMovie',
             'local' => 'override_id',
             'foreign' => 'movie_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}