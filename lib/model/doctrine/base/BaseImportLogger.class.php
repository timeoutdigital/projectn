<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ImportLogger', 'project_n');

/**
 * BaseImportLogger
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $total_received
 * @property integer $total_existing
 * @property integer $vendor_id
 * @property enum $type
 * @property enum $status
 * @property time $total_time
 * @property Vendor $Vendor
 * @property Doctrine_Collection $ImportLoggerSuccess
 * @property Doctrine_Collection $ImportLoggerError
 * 
 * @method integer             getTotalReceived()       Returns the current record's "total_received" value
 * @method integer             getTotalExisting()       Returns the current record's "total_existing" value
 * @method integer             getVendorId()            Returns the current record's "vendor_id" value
 * @method enum                getType()                Returns the current record's "type" value
 * @method enum                getStatus()              Returns the current record's "status" value
 * @method time                getTotalTime()           Returns the current record's "total_time" value
 * @method Vendor              getVendor()              Returns the current record's "Vendor" value
 * @method Doctrine_Collection getImportLoggerSuccess() Returns the current record's "ImportLoggerSuccess" collection
 * @method Doctrine_Collection getImportLoggerError()   Returns the current record's "ImportLoggerError" collection
 * @method ImportLogger        setTotalReceived()       Sets the current record's "total_received" value
 * @method ImportLogger        setTotalExisting()       Sets the current record's "total_existing" value
 * @method ImportLogger        setVendorId()            Sets the current record's "vendor_id" value
 * @method ImportLogger        setType()                Sets the current record's "type" value
 * @method ImportLogger        setStatus()              Sets the current record's "status" value
 * @method ImportLogger        setTotalTime()           Sets the current record's "total_time" value
 * @method ImportLogger        setVendor()              Sets the current record's "Vendor" value
 * @method ImportLogger        setImportLoggerSuccess() Sets the current record's "ImportLoggerSuccess" collection
 * @method ImportLogger        setImportLoggerError()   Sets the current record's "ImportLoggerError" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseImportLogger extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('import_logger');
        $this->hasColumn('total_received', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('total_existing', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('vendor_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'movie',
              1 => 'poi',
              2 => 'event',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'running',
              1 => 'failed',
              2 => 'success',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('total_time', 'time', null, array(
             'type' => 'time',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Vendor', array(
             'local' => 'vendor_id',
             'foreign' => 'id'));

        $this->hasMany('ImportLoggerSuccess', array(
             'local' => 'id',
             'foreign' => 'import_logger_id'));

        $this->hasMany('ImportLoggerError', array(
             'local' => 'id',
             'foreign' => 'import_logger_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}