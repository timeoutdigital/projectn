<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ImportLogger', 'project_n');

/**
 * BaseImportLogger
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property Doctrine_Collection $ImportRecordLogger
 * @property Doctrine_Collection $ImportRecordErrorLogger
 * @property Doctrine_Collection $ImportLoggerReceived
 * 
 * @method Doctrine_Collection getImportRecordLogger()      Returns the current record's "ImportRecordLogger" collection
 * @method Doctrine_Collection getImportRecordErrorLogger() Returns the current record's "ImportRecordErrorLogger" collection
 * @method Doctrine_Collection getImportLoggerReceived()    Returns the current record's "ImportLoggerReceived" collection
 * @method ImportLogger        setImportRecordLogger()      Sets the current record's "ImportRecordLogger" collection
 * @method ImportLogger        setImportRecordErrorLogger() Sets the current record's "ImportRecordErrorLogger" collection
 * @method ImportLogger        setImportLoggerReceived()    Sets the current record's "ImportLoggerReceived" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseImportLogger extends Logger
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('import_logger');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ImportRecordLogger', array(
             'local' => 'id',
             'foreign' => 'import_logger_id'));

        $this->hasMany('ImportRecordErrorLogger', array(
             'local' => 'id',
             'foreign' => 'import_logger_id'));

        $this->hasMany('ImportLoggerReceived', array(
             'local' => 'id',
             'foreign' => 'import_logger_id'));
    }
}