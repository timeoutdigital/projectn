<?php
require_once 'PHPUnit/Framework.php';
require_once dirname(__FILE__).'/../../../../../test/bootstrap/unit.php';
require_once dirname(__FILE__).'/../../../bootstrap.php';


/**
 * Test class for importNyMovies.
 * Generated by PHPUnit on 2010-01-14 at 17:15:53.
 */
class importNyMoviesTest extends PHPUnit_Framework_TestCase {
  /**
   * @var importNyMovies
   */
  protected $object;

  protected $vendorObj;

  protected $processXmlObj;

  protected $_poiObj;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {

    try
    {
      ProjectN_Test_Unit_Factory::createDatabases();
      Doctrine::loadData('data/fixtures');
    }
    catch(PDOException $e)
    {
      echo $e->getMessage();
    }

   //get a vendor
   $this->vendorObj = Doctrine::getTable('Vendor')->getVendorByCityAndLanguage('ny', 'en-US');

    //Set the new vendor if one doens't exist
    if(!$this->vendorObj){
      $this->vendorObj = new Vendor();
      $this->vendorObj->setCity('ny');
      $this->vendorObj->setLanguage('english');
      $this->vendorObj->save();
    }

    //Create the XML
    $this->processXmlObj = new processNyMoviesXml(dirname(__FILE__).'/../../../data/tms.xml');
    $this->processXmlObj->setMovies('/xffd/movies');
    $this->processXmlObj->setPoi('/xffd/theaters/theater');
    $this->processXmlObj->setOccurances('/xffd/showTimes/showTime');
    $this->object = new importNyMovies($this->processXmlObj, $this->vendorObj);
  }

  public function testies(){}

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown()
  {
    unset( $this->object );
    ProjectN_Test_Unit_Factory::destroyDatabases();
  }
//
//  /**
//   * Tests that the movies are imported
//   */
//  public function testMoviesImport()
//  {
//    $this->assertTrue($this->object->importMovies());
//  }
//
//
//  /**
//   *
//   */
//  public function testPoi()
//  {
//    $poiObj = $this->processXmlObj->getPoi();
//
//    foreach($poiObj as $poi)
//    {
//      $poiResultObj = $this->object->setPoi($poi);
//      $this->assertType('object',  $poiResultObj);
//      break;
//    }
//  }

//  /**
//   * Test the a movie is found and saved
//   */
//  public function testMovie()
//  {
//
//    $poiObj = $this->processXmlObj->getPoi();
//
//    foreach($poiObj as $poi)
//    {
//      $poiResultObj = $this->object->setPoi($poi);
//      $this->assertType('object',  $poiResultObj);
//      break;
//    }
//
//    $movieObj = $this->processXmlObj->getMovies();
//
//    foreach($movieObj as $movie)
//    {
//      $movieResultObj = $this->object->insertMovie($movie, $poiResultObj);
//      $this->assertType('object', $movieResultObj);
//      break;
//    }
//  }


}
?>
