<?php
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'/../../../../../lib/import/ny/nyImport.class.php';
require_once dirname(__FILE__).'/../../../../../lib/processXml.class.php';
require_once dirname(__FILE__).'/../../../../../test/bootstrap/unit.php';
spl_autoload_register(array('Doctrine', 'autoload'));


/**
 * Test class for importNy.
 * Generated by PHPUnit on 2010-01-07 at 12:14:28.
 *
 *
 * @author Tim Bowler <timbowler@timeout.com>
 *
 *
 */
class importNyTest extends PHPUnit_Framework_TestCase
{
  /**
   * @var importNy
   */
  protected $object;

  protected $xmlObj;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {

    try {
      $pDB = Doctrine_Manager::connection(new PDO('sqlite::memory:'));
      Doctrine::createTablesFromModels( dirname(__FILE__).'/../../../../../lib/model/doctrine' );

      $vendorObj = new Vendor();
      $vendorObj->setCity('test');
      $vendorObj->setLanguage('english');
      $vendorObj->save();

      $poiCategoryObj = new PoiCategory();
      $poiCategoryObj[ 'name' ] = 'theatre-music-culture';
      $poiCategoryObj->save();

      /*$poiObj = new Poi();
      $poiObj->setPoiName( 'test name' );
      $poiObj->setStreet( 'test street' );
      $poiObj->setHouseNo('12' );
      $poiObj->setZips('1234' );
      $poiObj->setCity( 'test town' );
      $poiObj->setDistrict( 'test district' );
      $poiObj->setCountry( 'test country' );
      $poiObj->setVendorPoiId( '123' );
      $poiObj->setLocalLanguage('en');
      $poiObj->setCountryCode( 'uk' );
      $poiObj->setLongitude( '0.1' );
      $poiObj->setLatitude( '0.2' );
      $poiObj->link( 'Vendor', 1 );
      $poiObj->link('PoiCategory', 1 );
      $poiObj->save();*/


      $this->xmlObj = new processNyXml( dirname(__FILE__).'/../../../data/tony_leo_test_correct.xml' );
      $this->xmlObj->setEvents('/body/event')->setVenues('/body/address');
      
      $this->object = new importNy( $this->xmlObj, $vendorObj );

    }
    catch(PDOException $e)
    {
      echo $e->getMessage();
    }



  }

  
  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {


    //Close DB connection
    Doctrine_Manager::getInstance()->closeConnection(Doctrine_Manager::connection());
  }


   /**
   * testInsertPoi
   */
  public function testInsertPoi()
  {
    $venuesArray = $this->xmlObj->getVenues();
    $this->object->insertPoi( $venuesArray[ 0 ] );

    $poiObj = Doctrine::getTable('Poi')->findByPoiName('Zankel Hall (at Carnegie Hall)');

    $this->assertEquals( 1, count( $poiObj ) );
  }

  /**
   * testInsertEvent
   * @todo add occurrence
   */
  public function testInsertEvent()
  {
    $venuesArray = $this->xmlObj->getVenues();
    $this->object->insertPoi( $venuesArray[ 0 ] );

    $eventsArray = $this->xmlObj->getEvents();
    $this->object->insertEvent( $eventsArray[ 0 ] );

    $eventObj = Doctrine::getTable('Event')->findByName('Rien Que Les Heures');
    $this->assertEquals( 1, count( $eventObj ) );

  }

  /*public function testInsertEventPriceProperty()
  {
    $venuesArray = $this->xmlObj->getVenues();
    $this->object->insertPoi( $venuesArray[ 0 ] );

    $eventsArray = $this->xmlObj->getEvents();
    $this->object->insertEvent( $eventsArray[ 0 ] );

    $eventObj = Doctrine::getTable('Event')->findByName('Rien Que Les Heures');

    foreach ( $eventObj[ 'EventProperty' ] as $property )
    {
      var_export( $property );
    }

    print_r( $eventObj[ 'EventProperty' ][ 'lookup' ] );

    //$this->assertEquals( '$10', $eventObj[ 'EventProperty' ][ 'prices' ] );
  }*/



}
?>
