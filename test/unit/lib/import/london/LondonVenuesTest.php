<?php
require_once 'PHPUnit/Framework.php';
//require_once dirname(__FILE__).'/../../../../../lib/vendor/symfony/lib/autoload/sfCoreAutoload.class.php';
//sfCoreAutoload::register();

//require_once(dirname(__FILE__).'/../../../../../config/ProjectConfiguration.class.php');
//$configuration = ProjectConfiguration::getApplicationConfiguration('frontend', 'test', false);
//sfContext::createInstance($configuration)->dispatch();

require_once( dirname(__FILE__).'/../../../../../lib/vendor/symfony/lib/plugins/sfDoctrinePlugin/lib/vendor/doctrine/Doctrine.php');
spl_autoload_register(array('Doctrine', 'autoload'));

require_once dirname(__FILE__).'/../../../../../lib/import/london/LondonVenue.class.php';

/**
 * Test class for LondonVenues.
 * Generated by PHPUnit on 2010-01-06 at 15:07:35.
 */
class LondonVenuesTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var LondonVenues
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new LondonVenues;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    
    public function testGetAllHasData()
    {
        $results = $this->object->getAll();
        $this->assertArrayHasKey( 'name', $results[0] );
        $this->assertTrue( strlen( $results[0]['name'] ) > 0 );
    }

    public function testDataHasStreet()
    {
        //should use fixtures for this...
        $results = $this->object->getAll();
        $this->assertArrayHasKey( 'street', $results[0] );
    }

    public function testDataHasCityAsLondon()
    {
        $results = $this->object->getAll();
        $this->assertArrayHasKey( 'city', $results[0] );
        $this->assertEquals( 'london', $results[0]['city'] );
    }

    public function testDataHasCountry()
    {
        $results = $this->object->getAll();
        $this->assertArrayHasKey( 'country', $results[0] );
        $this->assertEquals( 'GBR', $results[0]['country'] );
    }

    public function testDataHasCountryCode()
    {
        //is it in spec?
        //$results = $this->object->getAll();
        //$this->assertArrayHasKey( 'country_code', $results[0] );
        //$this->assertEquals( ??, $results[0]['country_code'] );
    }

    public function testDataHasLongitude()
    {
       $results = $this->object->getAll();
       $this->assertArrayHasKey( 'longitude', $results[0] );
       $this->assertGreaterThan( -180, $results[0]['longitude'] );
       $this->assertLessThan( 180, $results[0]['longitude'] );
    }

    public function testDataHasLatitude()
    {
       $results = $this->object->getAll();
       $this->assertArrayHasKey( 'latitude', $results[0] );
       $this->assertGreaterThan( -180, $results[0]['latitude'] );
       $this->assertLessThan( 180, $results[0]['latitude'] );
    }
    
    public function testDataHasVendorCategory()
    {
       //possibility of logic duplication?
       //$results = $this->object->getAll();
       //$this->assertArrayHasKey( 'vendor_category', $results[0] );
    }
}
?>
