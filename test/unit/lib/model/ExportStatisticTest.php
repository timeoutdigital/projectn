<?php
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'/../../../../test/bootstrap/unit.php';
require_once dirname(__FILE__).'/../../bootstrap.php';;

/**
 * Test class for ExportStatistic.
 * Generated by PHPUnit on 2010-03-04 at 16:58:02.
 */
class ExportStatisticTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var ExportStatistic
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        ProjectN_Test_Unit_Factory::createDatabases();

        $poi = ProjectN_Test_Unit_Factory::add( 'poi' );

        $vendor = ProjectN_Test_Unit_Factory::add( 'vendor' );

        $vendor2 = ProjectN_Test_Unit_Factory::add( 'vendor' );

        $exportLogger = new logExport( 1, 'poi' );
        $exportLogger->addItem( 1, 'some id');
        $exportLogger->addItem( 1, 'some id');

        $exportLogger2 = new logExport( 1, 'poi' );
        $exportLogger2->addItem( 1, 'some id');
        $exportLogger2->addItem( 1, 'some id');

        $exportLogger3 = new logExport( 2, 'poi' );
        $exportLogger3->addItem( 1, 'some id');
        $exportLogger3->addItem( 1, 'some id');

        $exportLogger4 = new logExport( 1, 'event' );
        $exportLogger4->addItem( 1, 'some id');
        $exportLogger4->addItem( 1, 'some id');

        $this->object = new ExportStatistic();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        ProjectN_Test_Unit_Factory::destroyDatabases();
    }

    /**
     */
    public function testGetFullStats()
    {
        $stats = $this->object->getFullStats();
        $this->assertEquals( 2 , $stats[ 0 ][ 'count' ]);
        $this->assertEquals( 4 , $stats[ 1 ][ 'count' ]);
        $this->assertEquals( 2 , $stats[ 2 ][ 'count' ]);
        $this->assertEquals( 3 , count( $stats ) );
    }

    /**
     */
    public function testGetStatsByModel() {
        $stats = $this->object->getStatsByModel( 'event' );
        $this->assertEquals( 1 , count( $stats ) );
    }

    /**
     */
    public function testGetStatsByVendor() {

        $stats = $this->object->getStatsByVendor( 1 );
        $this->assertEquals( 2 , count( $stats ) );
        $this->assertEquals( 2 , $stats[ 0 ][ 'count' ]);
        $this->assertEquals( 4 , $stats[ 1 ][ 'count' ]);
    }
}
?>
