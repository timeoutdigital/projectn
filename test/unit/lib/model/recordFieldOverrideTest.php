<?php
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'/../../../../test/bootstrap/unit.php';
require_once dirname(__FILE__).'/../../bootstrap.php';

/**
 * Test class for recordFieldOverride.
 * Generated by PHPUnit on 2010-04-07 at 19:11:00.
 */
class recordFieldOverrideManagerTest extends PHPUnit_Framework_TestCase {

  public function setUp()
  {
    ProjectN_Test_Unit_Factory::createDatabases();
  }

  public function tearDown()
  {
    ProjectN_Test_Unit_Factory::destroyDatabases();
  }

  public function testSavesRecordModificationsAsRecordFieldOverrides()
  {
    $receivedName   = 'Received name';
    $receivedStreet = 'Received street';
    $record = ProjectN_Test_Unit_Factory::add( 'Poi', array( 
      'poi_name' => $receivedName,
      'street'    => $receivedStreet
    ) );

    $editedName  = 'Edited name';
    $editedStreet = 'Edited street';
    $record[ 'poi_name' ] = $editedName;
    $record[ 'street' ]   = $editedStreet;
    $this->assertEquals( 2, count( $record->getModified() ), 'Record should have 1 modified field.' );

    $overrides = new recordFieldOverrideManager( $record );
    $overrides->saveRecordModificationsAsOverrides();
    $this->assertEquals( $editedName,   $record[ 'poi_name' ], 'Record should not be affected by saveRecordModificationsAsOverrides()');
    $this->assertEquals( $editedStreet, $record[ 'street' ],   'Record should not be affected by saveRecordModificationsAsOverrides()');

    $overrideTable = Doctrine::getTable( 'RecordFieldOverride' );
    $this->assertEquals( 2, $overrideTable->count(), 'Should have 2 records in RecordFieldOverride table.' );

    $nameOverride = $overrideTable->findOneByField( 'poi_name' );
    $this->assertEquals( $receivedName, $nameOverride[ 'received_value' ], 'Checking received name' ); 
    $this->assertEquals( $editedName,   $nameOverride[ 'edited_value' ], 'Checking edited name' );

    $streetOverride = $overrideTable->findOneByField( 'street' );
    $this->assertEquals( $receivedStreet, $streetOverride[ 'received_value' ], 'Checking received street' ); 
    $this->assertEquals( $editedStreet,   $streetOverride[ 'edited_value' ], 'Checking edited street' );

    $this->assertEquals( 2, count( $record[ 'RecordFieldOverride' ] )  );
  }

  public function testOverridesAreHonored()
  {
  }

}
