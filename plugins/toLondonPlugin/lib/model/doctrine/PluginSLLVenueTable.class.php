<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginSLLVenueTable extends Doctrine_Table
{

    /**
     * finds active venues by ids
     *
     * - excludes the 'Non-Venue venue' *ahem*
     * - active is where status is 10
     *
     * @param array $ids
     * @return Doctrine_Collection, null
     */
    public function findActiveByIds( $ids )
    {
        $results = $this->createQuery( )
                        ->select( '*' )
                        ->where( 'status = ? AND name != ?', array( 10, 'Non-Venue venue' ) )
                        ->andWhereIn( 'id', $ids )
                        ->execute( );

        if ( count( $results ) == 0 )
        {
            return null;
        }
        else
        {
            return $results;
        }
    }




    public function applyStatusFilter( $query, $value )
    {
        if ( $value ) $query->andWhere( 'status = ?', $value );
    }


    public function getVenue( $id )
    {
        $results = $this->createQuery( )
                        ->from( 'SLLVenue v' )
                        ->leftJoin( 'v.SLLVenueCategoryInformation vc' )
                        ->where( 'v.id = ?', $id )
                        ->execute( );

        if ( $results->count( ) == 0 ) return null;

        return $results[ 0 ];
    }


    public function search( $keyword )
    {
        $results = $this->createQuery( )
                        ->select( '*' )
                        ->from( 'SLLVenue v' )
                        ->where( 'v.name LIKE ? AND status = ? AND name != ?', array( "%$keyword%", 10, 'Non-Venue venue' ) )
                        ->limit( 10 )
                        ->execute( array(), Doctrine::HYDRATE_ARRAY );

        if ( count( $results ) == 0 ) return null;

        return $results;
    }

}