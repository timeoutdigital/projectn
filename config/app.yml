all:
  poi:
    default_coordinates:
      sydney1: { long: '151.207114', lat: '-33.867139' }
      newyork1: { long: '-78.835433', lat: '42.8917648' }
      newyork2: { long: '-73.95', lat: '40.65' }
      newyork3: { long: '-74.0059729', lat: '40.7142691' }
  vendor:
    address_transformations:
      3: # Singapore
        - { field: street, type: append, regexp: '%(#[-/0-9]+[A-Z]?,?\s)(?!(Dempsey|Frankel))%i', to: additional_address_details }
        - { field: street, type: append, regexp: '%(#[-/0-9A-Z]+)%i', to: additional_address_details }
        - { field: street, type: append, regecp: '%^([-/0-9]+[A-Z]?)%i', to: additional_address_details }
#      4: # London
#       - { field: street, type: append, regexp: '/(([0-9]+th|[0-9]+nd|[0-9]+st|[0-9]+rd|ground|second|third|fourth|fifth|mezzanine|lower ground|first and second)\sfloor,?)/i', to: additional_address_details }
#        - { field: street, type: append, regexp: '/(unit\s([0-9]+[a-z]?),?)/i', to: additional_address_details }
#        - { field: street, type: remove, regexp: '/([EWNS][CWE]?[0-9][A-Z]?\s[0-9][A-Z]+)/i' }
#        - { field: street, type: append, regexp: '%([-/0-9]+[a-zA-Z]?),?%i', to: house_no }
      8: # Sydney
        - { field: street, type: append, regexp: '%((Level|Unit|Lvl|Shop|Pier|Suite)\s([\d]+|One|Two|Seven))[/,]?%i', to: additional_address_details }
        - { field: street, type: append, regexp: '%((Ground|First|[\d]+(st|th|rd|nd))\s(floor|Floor),?)%i', to: additional_address_details }
        - { field: street, type: append, regexp: "/([-–0-9]+[-–A-z]?)(?=(\s|-|–)[-–A-z0-9])/i", to: house_no }
      4: # London
        - { field: street, type: remove, regexp: "/([A-Z][A-Z]?[0-9][A-Z0-9]?\s[0-9][A-Z]+)$/" }
  geocode:
    override_accuracy: 10
    google_map_api_key: keyfromadmin
  import_xslt:
    uae_films: |
      <?xml version="1.0" encoding="UTF-8"?>
       <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:output method="xml" encoding="UTF-8" indent="yes" cdata-section-elements="name landing_url description full_review director cast website" />
        <xsl:template match="/">
          <xsl:element name="films">
            <xsl:for-each select="//films/film">
                                  <xsl:copy-of select="." />
            </xsl:for-each>
          </xsl:element>
        </xsl:template>
      </xsl:stylesheet>
    uae_poi: |
      <?xml version="1.0" encoding="UTF-8"?>
       <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:output method="xml" encoding="UTF-8" indent="yes" cdata-section-elements="name landing_url description phone email neighbourhood prices hours city longitude longitude " />
        <xsl:template match="/">
          <xsl:element name="venues">
            <xsl:for-each select="//timeout-data/venues/venue">
                                  <xsl:copy-of select="." />
            </xsl:for-each>
          </xsl:element>
        </xsl:template>
      </xsl:stylesheet>
    uae_events: |
      <?xml version="1.0" encoding="UTF-8"?>
       <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:output method="xml" encoding="UTF-8" indent="yes" cdata-section-elements="name landing_url description phone email times start_date " />
        <xsl:template match="/">
          <xsl:element name="events">
            <xsl:for-each select="//timeout-data/events/event">
                                  <xsl:copy-of select="." />
            </xsl:for-each>
          </xsl:element>
        </xsl:template>
      </xsl:stylesheet>
  beijing:
      dns: "mysql:host=80.250.104.16;dbname=searchlight"
      user: projectn
      password: outtime99
test:
    beijing:
      dns:  sqlite:/tmp/beijing.db:
      user: projectn
      password: outtime99
test-functional:
    beijing:
      dns:  sqlite:/tmp/beijing.db:
      user: projectn
      password: outtime99